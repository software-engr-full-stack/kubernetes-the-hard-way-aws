---
- hosts: default

  remote_user: '{{ rem_usr }}'

  vars:
    ansible_ssh_private_key_file: '{{ id_file }}'
    custom_ansible_lib_dir: '../../lib/ansible-tasks'

  tasks:
    - name: 'Bootstrapping the Kubernetes Control Plane: set facts'
      set_fact:
        playbook_title: 'Bootstrapping the Kubernetes Control Plane'

    - name: '{{ playbook_title }}: configure cluster role, copy admin config file'
      ansible.builtin.copy:
        src: '{{ config_auto_gen_path }}/{{ item }}'
        dest: '{{ home_path }}/cluster-role.yml'
        mode: '0644'
      loop:
        - admin.kubeconfig

    - name: '{{ playbook_title }}: configure cluster role, create config file'
      ansible.builtin.copy:
        dest: '{{ home_path }}/cluster-role.yml'
        mode: '0644'
        content: |
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRole
          metadata:
            annotations:
              rbac.authorization.kubernetes.io/autoupdate: "true"
            labels:
              kubernetes.io/bootstrapping: rbac-defaults
            name: system:kube-apiserver-to-kubelet
          rules:
            - apiGroups:
                - ""
              resources:
                - nodes/proxy
                - nodes/stats
                - nodes/log
                - nodes/spec
                - nodes/metrics
              verbs:
                - "*"

    - name: '{{ playbook_title }}: configure cluster role, apply'
      ansible.builtin.command:
        argv:
          - kubectl
          - apply
          - --kubeconfig
          - '{{ home_path }}/admin.kubeconfig'
          - --filename
          - '{{ home_path }}/cluster-role.yml'

    - name: '{{ playbook_title }}: configure cluster role binding, create config file'
      ansible.builtin.copy:
        dest: '{{ home_path }}/cluster-role-binding.yml'
        mode: '0644'
        content: |
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: system:kube-apiserver
            namespace: ""
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: system:kube-apiserver-to-kubelet
          subjects:
            - apiGroup: rbac.authorization.k8s.io
              kind: User
              name: kubernetes

    - name: '{{ playbook_title }}: configure cluster role binding, apply'
      ansible.builtin.command:
        argv:
          - kubectl
          - apply
          - --kubeconfig
          - '{{ home_path }}/admin.kubeconfig'
          - --filename
          - '{{ home_path }}/cluster-role-binding.yml'

    - name: '{{ playbook_title }}: unset facts'
      set_fact:
        playbook_title:
